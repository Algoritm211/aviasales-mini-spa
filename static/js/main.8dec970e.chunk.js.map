{"version":3,"sources":["redux/tickets-reducer/tickets-selector.ts","helpers/dateTime-helper.ts","components/TicketContainer/Ticket/Ticket.tsx","api/api-config.ts","api/ticket-api.ts","redux/app-reducer/app-reducer.ts","redux/tickets-reducer/tickets-reducer.ts","redux/filter-reducer/filter-selector.ts","components/Loader/Loader.tsx","components/TicketContainer/TicketContainer.tsx","components/TicketContainer/sorting-tickets/sorting-functions.ts","redux/filter-reducer/filter-reducer.ts","components/SortTicketsContainer/FilterContainer.tsx","assets/plane-header.svg","components/MainLayout/Header/Header.tsx","components/MainLayout/MainLayout.tsx","redux/app-reducer/app-selector.ts","components/ErrorPage/ErrorPage.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["getTicketsLoading","state","ticketsReducer","isLoading","getTickets","tickets","getTimeDuration","time","toDestinationMinutes","diffHoursMinutes","n","hours","rhours","Math","floor","minutes","rminutes","round","toString","length","timeConvert","differenceInMinutes","add","Date","getTimeFlight","startHHMM","endHHMM","toISOString","substr","transferWord","numberTransfers","Ticket","ticket","timeFlightTo","segments","date","duration","timeFlightFrom","className","price","toLocaleString","style","currency","src","carrier","alt","origin","destination","stops","join","instanceAxios","axios","create","baseURL","TicketAPI","get","then","data","searchId","getSearchId","createAsyncThunk","a","appReducer","createSlice","name","initialState","isReady","isError","reducers","setError","action","payload","extraReducers","builder","addCase","fulfilled","actions","loadAllTickets","arg","thunkAPI","dispatch","setLoading","getState","ticketsData","stop","console","log","getFilters","filterReducer","numberOfTransfers","Loader","TicketContainer","useDispatch","useSelector","useState","mainSort","setMainSort","filters","useEffect","ticketsBlock","filterArr","includes","slice","filter","filteredTickets","i","push","filterFunction","sortType","sort","b","mainSortTickets","map","index","onClick","cn","data-sort","setNumberTransfers","FilterContainer","setNumberOfTransfers","onChangeTransfer","transfersNumber","prevState","num","type","id","htmlFor","Header","planeHeader","MainLayout","getAppReady","getAppError","ErrorPage","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","reducer","window","__store__","ReactDOM","render","document","getElementById"],"mappings":"0XAGaA,EAAoB,SAACC,GAChC,OAAOA,EAAMC,eAAeC,WAGjBC,EAAa,SAACH,GACzB,OAAOA,EAAMC,eAAeG,S,0CCUvB,IAAMC,EAAkB,SAACC,EAAcC,GAC5C,IAMMC,EAtBR,SAAqBC,GACnB,IACIC,EADMD,EACS,GACfE,EAASC,KAAKC,MAAMH,GACpBI,EAA6B,IAAlBJ,EAAQC,GACnBI,EAAWH,KAAKI,MAAMF,GAASG,WAInC,OAHwB,IAApBF,EAASG,SACXH,EAAQ,WAAOA,IAEV,CACLL,MAAOC,EACPG,QAASC,GAWcI,CANZC,IACXC,IAAI,IAAIC,KAAKhB,GAAO,CAClBQ,QAASP,IAEX,IAAIe,KAAKhB,KAIX,MAAM,GAAN,OAAUE,EAAiBE,MAA3B,kBAAqCF,EAAiBM,QAAtD,WAGWS,EAAgB,SAACjB,EAAcC,GAE1C,IAAMiB,EAAY,IAAIF,KAAKhB,GACrBmB,EAAUJ,IAAI,IAAIC,KAAKE,GAAY,CACvCV,QAASP,IAEX,MAAO,CACLiB,UAAWA,EAAUE,cAAcC,OAAO,GAAI,GAC9CF,QAASA,EAAQC,cAAcC,OAAO,GAAI,K,OC8C9C,SAASC,EAAaC,GACpB,OAAQA,GACN,KAAK,EACH,MAAO,yDACT,KAAK,EACH,MAAO,yDACT,QACE,MAAO,0DAIEC,MAtFqB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAE9BC,EAAeT,EAAcQ,EAAOE,SAAS,GAAGC,KAAMH,EAAOE,SAAS,GAAGE,UACzEC,EAAiBb,EAAcQ,EAAOE,SAAS,GAAGC,KAAMH,EAAOE,SAAS,GAAGE,UAEjF,OACE,sBAAKE,UAAW,SAAhB,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGzB,KAAKI,MAAMe,EAAOO,OAAOC,eAAe,QAAS,CAACC,MAAO,WAAYC,SAAU,UAGlF,qBAAKJ,UAAU,sBAAf,SACE,qBAAKK,IAAG,oCAA+BX,EAAOY,QAAtC,QAAqDC,IAAI,iBAGrE,sBAAKP,UAAW,kBAAhB,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,2BAAf,UACGN,EAAOE,SAAS,GAAGY,OADtB,MACiCd,EAAOE,SAAS,GAAGa,eAEpD,sBAAKT,UAAU,4BAAf,UACGL,EAAaR,UADhB,MAC8BQ,EAAaP,cAG7C,sBAAKY,UAAU,oBAAf,UACE,qBAAKA,UAAU,2BAAf,6CAGA,qBAAKA,UAAU,4BAAf,SACGhC,EAAgB0B,EAAOE,SAAS,GAAGC,KAAMH,EAAOE,SAAS,GAAGE,eAGjE,sBAAKE,UAAU,oBAAf,UACE,sBAAKA,UAAU,2BAAf,UACGN,EAAOE,SAAS,GAAGc,MAAM7B,OAD5B,IACqCU,EAAaG,EAAOE,SAAS,GAAGc,MAAM7B,WAE3E,qBAAKmB,UAAU,4BAAf,SACGN,EAAOE,SAAS,GAAGc,MAAMC,KAAK,cAIrC,sBAAKX,UAAU,eAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,2BAAf,UACGN,EAAOE,SAAS,GAAGY,OADtB,MACiCd,EAAOE,SAAS,GAAGa,eAEpD,sBAAKT,UAAU,4BAAf,UACGD,EAAeZ,UADlB,MACgCY,EAAeX,cAGjD,sBAAKY,UAAU,oBAAf,UACE,qBAAKA,UAAU,2BAAf,6CAGA,qBAAKA,UAAU,4BAAf,SACGhC,EAAgB0B,EAAOE,SAAS,GAAGC,KAAMH,EAAOE,SAAS,GAAGE,eAGjE,sBAAKE,UAAU,oBAAf,UACE,sBAAKA,UAAU,2BAAf,UACGN,EAAOE,SAAS,GAAGc,MAAM7B,OAD5B,IACqCU,EAAaG,EAAOE,SAAS,GAAGc,MAAM7B,WAE3E,qBAAKmB,UAAU,4BAAf,SACGN,EAAOE,SAAS,GAAGc,MAAMC,KAAK,qB,uCCxEhCC,E,OAAgBC,EAAMC,OAAO,CACxCC,QAAS,0CCMEC,EACE,WACX,OAAOJ,EAAcK,IAAwB,UAC1CC,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SAHZH,EAMC,SAACI,GACX,OAAOR,EAAcK,IAAd,2BAAsDG,IAC1DF,MAAK,SAAAC,GAAI,OAAIA,EAAKA,SCbZE,EAAcC,YACzB,yBADyC,sBAEzC,4BAAAC,EAAA,sEACyBP,IADzB,cACQI,EADR,yBAESA,GAFT,4CAMII,EAAaC,YAAY,CAC7BC,KAAM,aACNC,aAAc,CACZP,SAAU,KACVQ,SAAS,EACTC,SAAS,GAEXC,SAAS,CACPC,SAAU,SAACpE,EAAOqE,GAChBrE,EAAMkE,QAAUG,EAAOC,UAG3BC,cAAe,SAAAC,GACbA,EAAQC,QAAQf,EAAYgB,WAAW,SAAC1E,EAAOqE,GAC7CrE,EAAMyD,SAAWY,EAAOC,QAAQb,SAChCzD,EAAMiE,SAAU,QAKRG,EAAYP,EAAWc,QAAvBP,SAECP,IAAf,QCvBae,EAAiBjB,YAG5B,gCAH4C,uCAI5C,WAAOkB,EAAaC,GAApB,iBAAAlB,EAAA,6DACEkB,EAASC,SAASC,GAAW,IACvBvB,EAAWqB,EAASG,WAAWpB,WAAWJ,SAC5CyB,EAAc,CAAC9E,QAAS,GAAI+E,MAAM,GAHxC,kBAKwB9B,EAAqBI,GAL7C,OAKIyB,EALJ,OAMIJ,EAASC,SAASC,GAAW,IANjC,kDAQII,QAAQC,IAAR,MACAP,EAASC,SAASX,GAAS,IAT/B,iCAWSc,GAXT,0DAJ4C,yDAoBxCjF,EAAiB6D,YAAY,CACjCC,KAAM,iBACNC,aAAc,CACZ5D,QAAS,GACT+E,MAAM,EACNjF,WAAW,GAEbiE,SAAU,CACRa,WAAY,SAAChF,EAAOqE,GAClBrE,EAAME,UAAYmE,EAAOC,UAG7BC,cAAe,SAAAC,GACbA,EAAQC,QAAQG,EAAeF,WAAW,SAAC1E,EAAOqE,GAChDrE,EAAMI,QAAUiE,EAAOC,QAAQlE,QAC/BJ,EAAMmF,KAAOd,EAAOC,QAAQa,WAMpBH,EAAc/E,EAAe0E,QAA7BK,WACC/E,IAAf,Q,yBClDaqF,EAAa,SAACtF,GACzB,OAAOA,EAAMuF,cAAcC,mBCgBdC,G,MAjBU,WACvB,OACE,qBAAKpD,UAAW,SAAhB,SACE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,8BACE,gCACE,wBACA,qCCGd,IAgDeqD,EAhDS,WACtB,IAAMX,EAAWY,cACbvF,EAAUwF,YAAYzF,GACpBD,EAAY0F,YAAY7F,GAHF,EAII8F,mBAAuB,WAJ3B,mBAIrBC,EAJqB,KAIXC,EAJW,KAKtBC,EAAUJ,YAAYN,GAE5BW,qBAAU,WACRlB,EAASH,EAAe,WACvB,CAACG,IAOJ,IAAMmB,GAFN9F,ECPK,SAAwBA,EAAwB+F,GACrD,GAAyB,IAArBA,EAAUjF,QAAgBiF,EAAUC,UAAU,GAChD,OAAOhG,EACF,GAAI+F,EAAUC,SAAS,GAI5B,OAHUhG,EAAQiG,QAAQC,QAAO,SAAAvE,GAC/B,OAA2C,IAApCA,EAAOE,SAAS,GAAGc,MAAM7B,QAAoD,IAApCa,EAAOE,SAAS,GAAGc,MAAM7B,UAK3E,IADA,IAAIqF,EAAkB,GACbC,EAAI,EAAGA,EAAIpG,EAAQc,OAAQsF,IAC9BL,EAAUC,SAAShG,EAAQoG,GAAGvE,SAAS,GAAGc,MAAM7B,SAAYiF,EAAUC,SAAShG,EAAQoG,GAAGvE,SAAS,GAAGc,MAAM7B,SAC9GqF,EAAgBE,KAAKrG,EAAQoG,IAGjC,OAAOD,EDRCG,CAFVtG,ECtBK,SAAyBA,EAAyBuG,GACvD,MAAiB,aAAbA,EACFvG,EAAUA,EAAQiG,QAAQO,MAAK,SAAChD,EAAGiD,GACjC,OAAOjD,EAAEtB,MAAQuE,EAAEvE,SAGC,YAAbqE,EACTvG,EAAUA,EAAQiG,QAAQO,MAAK,SAAChD,EAAGiD,GACjC,OAAOjD,EAAE3B,SAAS,GAAGE,SAAW0E,EAAE5E,SAAS,GAAGE,YAIzC/B,EDUC0G,CAAgB1G,EAAS0F,GAEDE,IAELe,KAAI,SAAChF,EAAiBiF,GACjD,OAAO,cAAC,EAAD,CAAQjF,OAAQA,GAAaiF,MAGtC,OACE,gCACE,sBAAK3E,UAAW,SAAhB,UACE,qBACE4E,QAAS,kBAAMlB,EAAY,aAC3B1D,UAAW6E,IAAG,eAAgB,CAAC,OAAuB,aAAbpB,IAF3C,uFAKA,qBACEmB,QAAS,kBAAMlB,EAAY,YAC3B1D,UAAW6E,IAAG,eAAgB,CAAC,OAAuB,YAAbpB,IAF3C,uFAKA,qBACEmB,QAAS,kBAAMlB,EAAY,YAC3BoB,YAAW,UACX9E,UAAW6E,IAAG,eAAgB,CAAC,OAAuB,YAAbpB,IAH3C,mFAOF,8BACG5F,EAAY,cAAC,EAAD,IAAagG,Q,QEpD5BX,G,MAAgBzB,YAAY,CAChCC,KAAM,gBACNC,aAAc,CAEZwB,kBAAmB,IAErBrB,SAAU,CACRiD,mBAAoB,SAACpH,EAAOqE,GAC1BrE,EAAMwF,kBAAoBnB,EAAOC,QAAQkB,uBAKjC4B,EAAsB7B,EAAcZ,QAApCyC,mBACC7B,IAAf,QCoCe8B,EAhDmB,WAEhC,IAAMtC,EAAWY,cAFqB,EAGYE,mBAAmB,IAH/B,mBAG/BL,EAH+B,KAGZ8B,EAHY,KAKhCC,EAAmB,SAACC,GACnBhC,EAAkBY,SAASoB,GAG9BF,GAAqB,SAAAG,GAAS,OAAIA,EAAUnB,QAAO,SAAAoB,GAAG,OAAIA,IAAQF,QAFlEF,GAAqB,SAAAG,GAAS,4BAAQA,GAAR,CAAmBD,QAUrD,OAJAvB,qBAAU,WACRlB,EAASqC,EAAmB,CAAC5B,yBAC5B,CAACT,EAAUS,IAGZ,sBAAKnD,UAAW,aAAhB,UACE,qBAAKA,UAAU,qBAAf,iIAGA,sBAAKA,UAAU,sBAAf,UACE,gCACE,uBAAOsF,KAAK,WAAWC,GAAG,MAAMX,QAAS,kBAAMM,GAAkB,MACjE,uBAAOM,QAAQ,MAAf,mCAEF,gCACE,uBAAOF,KAAK,WAAWC,GAAG,mBAAmBX,QAAS,kBAAMM,EAAiB,MAC7E,uBAAOM,QAAQ,mBAAf,0FAEF,gCACE,uBAAOF,KAAK,WAAWC,GAAG,aAAaX,QAAS,kBAAMM,EAAiB,MACvE,uBAAOM,QAAQ,aAAf,yEAEF,gCACE,uBAAOF,KAAK,WAAWC,GAAG,aAAaX,QAAS,kBAAMM,EAAiB,MACvE,uBAAOM,QAAQ,aAAf,yEAEF,gCACE,uBAAOF,KAAK,WAAWC,GAAG,aAAaX,QAAS,kBAAMM,EAAiB,MACvE,uBAAOM,QAAQ,aAAf,gFC9CK,G,MAAA,IAA0B,0CCY1BC,G,MARS,WACtB,OACE,qBAAKzF,UAAU,SAAf,SACE,qBAAKK,IAAKqF,EAAanF,IAAK,qBCiBnBoF,EAlBc,WAC3B,OACE,sBAAK3F,UAAW,aAAhB,UACE,iCACE,cAAC,EAAD,MAEF,uBAAMA,UAAW,OAAjB,UACE,8BACE,cAAC,EAAD,MAEF,8BACE,cAAC,EAAD,aCdG4F,EAAc,SAACjI,GAC1B,OAAOA,EAAM6D,WAAWI,SAGbiE,EAAc,SAAClI,GAC1B,OAAOA,EAAM6D,WAAWK,SCkBXiE,G,MArBY,WAMzB,OACE,sBAAK9F,UAAW,QAAhB,UACE,qBAAKA,UAAU,gBAAf,iMAGA,sBAAKA,UAAU,gBAAf,UACE,sQACA,qBAAKA,UAAU,oBAAoB4E,QAXxB,WACfmB,SAASC,UAUL,oGCYOC,MArBf,WAEE,IAAMvD,EAAWY,cACX1B,EAAU2B,YAAYqC,GACtB/D,EAAU0B,YAAYsC,GAM5B,OAJAjC,qBAAU,WACRlB,EAASrB,OACR,CAACqB,IAEAb,EACK,cAAC,EAAD,IAIP,qBAAK7B,UAAU,MAAf,SACG4B,EAAU,cAAC,EAAD,IAAiB,cAAC,EAAD,OCXnBsE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlF,MAAK,YAAkD,IAA/CmF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCFRO,GAAcC,YAAgB,CAClCnF,aACA5D,iBACAsF,kBAMI0D,GAAQC,YAAe,CAC3BC,QAASJ,KAOXK,OAAOC,UAAYJ,GAEJA,UClBfK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.8dec970e.chunk.js","sourcesContent":["import {RootState} from \"../store\";\n\n\nexport const getTicketsLoading = (state: RootState) => {\n  return state.ticketsReducer.isLoading\n}\n\nexport const getTickets = (state: RootState) => {\n  return state.ticketsReducer.tickets\n}\n","import add from 'date-fns/add'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nfunction timeConvert(n: number) {\n  let num = n;\n  let hours = (num / 60);\n  let rhours = Math.floor(hours);\n  let minutes = (hours - rhours) * 60;\n  let rminutes = Math.round(minutes).toString();\n  if (rminutes.length === 1) {\n    rminutes = `0${rminutes}`\n  }\n  return {\n    hours: rhours,\n    minutes: rminutes\n  }\n}\n\nexport const getTimeDuration = (time: string, toDestinationMinutes: number) => {\n  const diff = differenceInMinutes(\n    add(new Date(time), {\n      minutes: toDestinationMinutes\n    }),\n    new Date(time)\n  )\n  const diffHoursMinutes = timeConvert(diff)\n\n  return `${diffHoursMinutes.hours}ч ${diffHoursMinutes.minutes}м`\n}\n\nexport const getTimeFlight = (time: string, toDestinationMinutes: number) => {\n\n  const startHHMM = new Date(time)\n  const endHHMM = add(new Date(startHHMM), {\n    minutes: toDestinationMinutes\n  })\n  return {\n    startHHMM: startHHMM.toISOString().substr(11, 5),\n    endHHMM: endHHMM.toISOString().substr(11, 5)\n  }\n\n}\n","import React from 'react';\nimport './Ticket.scss'\nimport {ITicket} from \"../../../types/types\";\nimport {getTimeDuration, getTimeFlight} from '../../../helpers/dateTime-helper';\n\ntype TypeProps = {\n  ticket: ITicket\n}\n\nconst Ticket: React.FC<TypeProps> = ({ticket}) => {\n\n  const timeFlightTo = getTimeFlight(ticket.segments[0].date, ticket.segments[0].duration)\n  const timeFlightFrom = getTimeFlight(ticket.segments[1].date, ticket.segments[1].duration)\n\n  return (\n    <div className={'ticket'}>\n      <div className=\"ticket__header\">\n        <div className=\"ticket__header-price\">\n          {Math.round(ticket.price).toLocaleString(\"ru-RU\", {style: \"currency\", currency: \"RUB\"})}\n\n        </div>\n        <div className=\"ticket__header-logo\">\n          <img src={`https://pics.avs.io/99/36/${ticket.carrier}.png`} alt=\"carrier\"/>\n        </div>\n      </div>\n      <div className={'ticket__content'}>\n        <div className='ticket__info'>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              {ticket.segments[0].origin} - {ticket.segments[0].destination}\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {timeFlightTo.startHHMM} - {timeFlightTo.endHHMM}\n            </div>\n          </div>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              В пути\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {getTimeDuration(ticket.segments[0].date, ticket.segments[0].duration)}\n            </div>\n          </div>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              {ticket.segments[0].stops.length} {transferWord(ticket.segments[0].stops.length)}\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {ticket.segments[0].stops.join(', ')}\n            </div>\n          </div>\n        </div>\n        <div className='ticket__info'>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              {ticket.segments[1].origin} - {ticket.segments[1].destination}\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {timeFlightFrom.startHHMM} - {timeFlightFrom.endHHMM}\n            </div>\n          </div>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              В пути\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {getTimeDuration(ticket.segments[1].date, ticket.segments[1].duration)}\n            </div>\n          </div>\n          <div className=\"ticket__info-cell\">\n            <div className=\"ticket__info-cell-header\">\n              {ticket.segments[1].stops.length} {transferWord(ticket.segments[1].stops.length)}\n            </div>\n            <div className=\"ticket__info-cell-content\">\n              {ticket.segments[1].stops.join(', ')}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n\nfunction transferWord(numberTransfers: number) {\n  switch (numberTransfers) {\n    case 0:\n      return 'пересадок'\n    case 1:\n      return 'пересадка'\n    default:\n      return 'пересадки'\n  }\n}\n\nexport default Ticket;\n","import axios from 'axios'\n\nexport const instanceAxios = axios.create({\n  baseURL: 'https://front-test.beta.aviasales.ru/'\n})\n","import {instanceAxios} from \"./api-config\";\nimport {ITicket} from \"../types/types\";\n\n\nexport type GetTicketsType = {\n  tickets: Array<ITicket>\n  stop: boolean\n}\n\nexport const TicketAPI = {\n  getSearchId: () => {\n    return instanceAxios.get<{searchId: string}>('search')\n      .then(data => data.data)\n  },\n\n  getTickets: (searchId: string) => {\n    return instanceAxios.get<GetTicketsType>(`tickets?searchId=${searchId}`)\n      .then(data => data.data)\n  }\n\n\n}\n","import {createAsyncThunk, createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {TicketAPI} from \"../../api/ticket-api\";\n\n\nexport const getSearchId = createAsyncThunk(\n  'appReducer/getSearchId',\n  async () => {\n    const searchId = await TicketAPI.getSearchId()\n    return searchId\n  }\n)\n\nconst appReducer = createSlice({\n  name: 'appReducer',\n  initialState: {\n    searchId: null as unknown as string,\n    isReady: false,\n    isError: false\n  },\n  reducers:{\n    setError: (state, action:PayloadAction<boolean>) => {\n      state.isError = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getSearchId.fulfilled, (state, action) => {\n      state.searchId = action.payload.searchId\n      state.isReady = true\n    })\n  }\n})\n\nexport const {setError} = appReducer.actions\n\nexport default appReducer.reducer\n","import {$CombinedState, createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport {ITicket} from \"../../types/types\";\nimport {AppDispatch, RootState} from \"../store\";\nimport {GetTicketsType, TicketAPI} from \"../../api/ticket-api\";\nimport { setError } from \"../app-reducer/app-reducer\";\n\ntype ThunkAPIType = {\n  dispatch: AppDispatch\n  state: RootState\n}\n\nexport const loadAllTickets = createAsyncThunk<\n  { tickets: Array<ITicket>, stop: boolean }\n  , 'load', ThunkAPIType>(\n  'ticketsReducer/loadAllTickets',\n  async (arg: 'load', thunkAPI) => {\n    thunkAPI.dispatch(setLoading(true))\n    const searchId = thunkAPI.getState().appReducer.searchId\n    let ticketsData = {tickets: [], stop: false} as GetTicketsType;\n    try {\n      ticketsData = await TicketAPI.getTickets(searchId)\n      thunkAPI.dispatch(setLoading(false))\n    } catch (error) {\n      console.log(error)\n      thunkAPI.dispatch(setError(true))\n    }\n    return ticketsData\n  }\n)\n\n\nconst ticketsReducer = createSlice({\n  name: 'ticketsReducer',\n  initialState: {\n    tickets: [] as Array<ITicket>,\n    stop: false,\n    isLoading: false\n  },\n  reducers: {\n    setLoading: (state, action) => {\n      state.isLoading = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadAllTickets.fulfilled, (state, action) => {\n      state.tickets = action.payload.tickets\n      state.stop = action.payload.stop\n    })\n  }\n})\n\n\nexport const {setLoading} = ticketsReducer.actions\nexport default ticketsReducer.reducer\n","import {RootState} from \"../store\";\n\n\nexport const getFilters = (state: RootState) => {\n  return state.filterReducer.numberOfTransfers\n}\n","import React from 'react';\nimport './Loader.scss'\n\nconst Loader: React.FC = () => {\n  return (\n    <div className={'loader'}>\n      <div className=\"loadingio-spinner-magnify-kfuigzlosva\">\n        <div className=\"ldio-ohbisq7qyn\">\n          <div>\n            <div>\n              <div/>\n              <div/>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getTickets, getTicketsLoading} from \"../../redux/tickets-reducer/tickets-selector\";\nimport Ticket from \"./Ticket/Ticket\";\nimport {ITicket} from \"../../types/types\";\nimport {loadAllTickets} from \"../../redux/tickets-reducer/tickets-reducer\";\nimport './TicketContainer.scss'\nimport cn from 'classnames'\nimport {getFilters} from \"../../redux/filter-reducer/filter-selector\";\nimport Loader from \"../Loader/Loader\";\nimport {filterFunction, mainSortTickets} from \"./sorting-tickets/sorting-functions\";\n\nexport type MainSortType = 'cheapest' | 'fastest' | 'optimal'\n\nconst TicketContainer = () => {\n  const dispatch = useDispatch()\n  let tickets = useSelector(getTickets)\n  const isLoading = useSelector(getTicketsLoading)\n  const [mainSort, setMainSort] = useState<MainSortType>('optimal')\n  const filters = useSelector(getFilters)\n\n  useEffect(() => {\n    dispatch(loadAllTickets('load'))\n  }, [dispatch])\n\n  // Main sorting\n  tickets = mainSortTickets(tickets, mainSort)\n  // Filter options\n  tickets = filterFunction(tickets, filters)\n\n  const ticketsBlock = tickets.map((ticket: ITicket, index ) => {\n    return <Ticket ticket={ticket} key={index}/>\n  })\n\n  return (\n    <div>\n      <div className={'filter'}>\n        <div\n          onClick={() => setMainSort('cheapest')}\n          className={cn('filter__cell', {'active': mainSort === 'cheapest'})}>\n          Самый дешевый\n        </div>\n        <div\n          onClick={() => setMainSort('fastest')}\n          className={cn('filter__cell', {'active': mainSort === 'fastest'})}>\n          Самый быстрый\n        </div>\n        <div\n          onClick={() => setMainSort('optimal')}\n          data-sort={'optimal'}\n          className={cn('filter__cell', {'active': mainSort === 'optimal'})}>\n          Оптимальный\n        </div>\n      </div>\n      <div>\n        {isLoading ? <Loader /> : ticketsBlock}\n      </div>\n    </div>\n  );\n};\n\n\nexport default TicketContainer;\n","import {ITicket} from \"../../../types/types\";\nimport {MainSortType} from \"../TicketContainer\";\n\n\nexport function mainSortTickets(tickets: Array<ITicket>, sortType: MainSortType) {\n  if (sortType === 'cheapest') {\n    tickets = tickets.slice().sort((a, b) => {\n      return a.price - b.price;\n    })\n    return tickets\n  } else if (sortType === 'fastest') {\n    tickets = tickets.slice().sort((a, b) => {\n      return a.segments[0].duration - b.segments[0].duration;\n    })\n    return tickets\n  } else {\n    return tickets\n  }\n}\n\n\nexport function filterFunction(tickets: Array<ITicket>,filterArr: number[]) {\n  if (filterArr.length === 0 || filterArr.includes(-1)) {\n    return tickets\n  } else if (filterArr.includes(0)) {\n    tickets = tickets.slice().filter(ticket => {\n      return ticket.segments[0].stops.length === 0 && ticket.segments[1].stops.length === 0\n    })\n    return tickets\n  } else {\n    let filteredTickets = [] as Array<ITicket>\n    for (let i = 0; i < tickets.length; i++) {\n      if (filterArr.includes(tickets[i].segments[0].stops.length) &&  filterArr.includes(tickets[i].segments[1].stops.length)) {\n        filteredTickets.push(tickets[i])\n      }\n    }\n    return filteredTickets\n  }\n}\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n\n\nconst filterReducer = createSlice({\n  name: 'filterReducer',\n  initialState: {\n    // -1 if no matter how many transfers\n    numberOfTransfers: [] as Array<number>\n  },\n  reducers: {\n    setNumberTransfers: (state, action: PayloadAction<{ numberOfTransfers: number[] }>) => {\n      state.numberOfTransfers = action.payload.numberOfTransfers\n    }\n  }\n})\n\nexport const {setNumberTransfers} = filterReducer.actions\nexport default filterReducer.reducer\n","import React, {useEffect, useState} from 'react';\nimport './FilterContainer.scss'\nimport {useDispatch} from \"react-redux\";\nimport { setNumberTransfers } from '../../redux/filter-reducer/filter-reducer';\n\nconst FilterContainer: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const [numberOfTransfers, setNumberOfTransfers] = useState<number[]>([])\n\n  const onChangeTransfer = (transfersNumber: number) => {\n    if (!numberOfTransfers.includes(transfersNumber)) {\n      setNumberOfTransfers(prevState => [...prevState, transfersNumber])\n    } else {\n      setNumberOfTransfers(prevState => prevState.filter(num => num !== transfersNumber))\n    }\n  }\n\n  useEffect(() => {\n    dispatch(setNumberTransfers({numberOfTransfers}))\n  }, [dispatch, numberOfTransfers])\n\n  return (\n    <div className={'fContainer'}>\n      <div className=\"fContainer__header\">\n        Количество пересадок\n      </div>\n      <div className=\"fContainer__filters\">\n        <div>\n          <input type=\"checkbox\" id=\"all\" onClick={() => onChangeTransfer(-1)}/>\n          <label htmlFor=\"all\">Все</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"without_transfer\" onClick={() => onChangeTransfer(0)} />\n          <label htmlFor=\"without_transfer\">Без пересадок</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"1_transfer\" onClick={() => onChangeTransfer(1)}/>\n          <label htmlFor=\"1_transfer\">1 пересадка</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"2_transfer\" onClick={() => onChangeTransfer(2)}/>\n          <label htmlFor=\"2_transfer\">2 пересадки</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"3_transfer\" onClick={() => onChangeTransfer(3)}/>\n          <label htmlFor=\"3_transfer\">3 пересадки</label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterContainer;\n","export default __webpack_public_path__ + \"static/media/plane-header.df195519.svg\";","import React from 'react';\nimport planeHeader from \"../../../assets/plane-header.svg\";\nimport './Header.scss'\n\nconst Header:React.FC = () => {\n  return (\n    <div className=\"header\">\n      <img src={planeHeader} alt={'header-plane'}/>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport TicketContainer from \"../TicketContainer/TicketContainer\";\nimport FilterContainer from \"../SortTicketsContainer/FilterContainer\";\nimport './MainLayout.scss'\nimport Header from \"./Header/Header\";\n\nconst MainLayout: React.FC = () => {\n  return (\n    <div className={'mainLayout'}>\n      <header>\n        <Header />\n      </header>\n      <main className={'main'}>\n        <div>\n          <FilterContainer />\n        </div>\n        <div>\n          <TicketContainer/>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import { RootState } from \"../store\"\n\n\nexport const getAppReady = (state: RootState) => {\n  return state.appReducer.isReady\n}\n\nexport const getAppError = (state: RootState) => {\n  return state.appReducer.isError\n}\n","import React from 'react';\nimport './ErrorPage.scss'\n\ndeclare var location: Location\n\nconst ErrorPage:React.FC = () => {\n\n  const onReload = () => {\n    location.reload()\n  }\n\n  return (\n    <div className={'error'}>\n      <div className=\"error__header\">\n        Упс, при загрузке произошла ошибка\n      </div>\n      <div className=\"error__reload\">\n        <div>Попробуйте еще раз, перезагрузите страницу</div>\n        <div className=\"error__reload-btn\" onClick={onReload}>\n          Перезагрузить\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport MainLayout from \"./components/MainLayout/MainLayout\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAppError, getAppReady} from \"./redux/app-reducer/app-selector\";\nimport {getSearchId} from \"./redux/app-reducer/app-reducer\";\nimport Loader from \"./components/Loader/Loader\";\nimport ErrorPage from \"./components/ErrorPage/ErrorPage\";\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const isReady = useSelector(getAppReady)\n  const isError = useSelector(getAppError)\n\n  useEffect(() => {\n    dispatch(getSearchId())\n  }, [dispatch])\n\n  if (isError) {\n    return <ErrorPage />\n  }\n\n  return (\n    <div className=\"App\">\n      {isReady ? <MainLayout /> : <Loader/>}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport {combineReducers, configureStore} from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport ticketsReducer from  './tickets-reducer/tickets-reducer'\nimport appReducer from  './app-reducer/app-reducer'\nimport filterReducer from  './filter-reducer/filter-reducer'\n\nconst rootReducer = combineReducers({\n  appReducer,\n  ticketsReducer,\n  filterReducer\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\n\nconst store = configureStore({\n  reducer: rootReducer\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}